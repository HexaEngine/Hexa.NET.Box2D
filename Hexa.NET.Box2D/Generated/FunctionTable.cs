// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Box2D
{
	public unsafe partial class Box2D
	{
		internal static FunctionTable funcTable;

		/// <summary>
		/// Initializes the function table, automatically called. Do not call manually, only after <see cref="FreeApi"/>.
		/// </summary>
		public static void InitApi()
		{
			funcTable = new FunctionTable(LibraryLoader.LoadLibrary(GetLibraryName, null), 358);
			funcTable.Load(0, "b2SetAllocator");
			funcTable.Load(1, "b2GetByteCount");
			funcTable.Load(2, "b2SetAssertFcn");
			funcTable.Load(3, "b2GetVersion");
			funcTable.Load(4, "b2CreateTimer");
			funcTable.Load(5, "b2GetTicks");
			funcTable.Load(6, "b2GetMilliseconds");
			funcTable.Load(7, "b2GetMillisecondsAndReset");
			funcTable.Load(8, "b2SleepMilliseconds");
			funcTable.Load(9, "b2Yield");
			funcTable.Load(10, "b2IsValid");
			funcTable.Load(11, "b2Vec2_IsValid");
			funcTable.Load(12, "b2Rot_IsValid");
			funcTable.Load(13, "b2AABB_IsValid");
			funcTable.Load(14, "b2Normalize");
			funcTable.Load(15, "b2NormalizeChecked");
			funcTable.Load(16, "b2GetLengthAndNormalize");
			funcTable.Load(17, "b2SetLengthUnitsPerMeter");
			funcTable.Load(18, "b2GetLengthUnitsPerMeter");
			funcTable.Load(19, "b2IsValidRay");
			funcTable.Load(20, "b2MakePolygon");
			funcTable.Load(21, "b2MakeOffsetPolygon");
			funcTable.Load(22, "b2MakeSquare");
			funcTable.Load(23, "b2MakeBox");
			funcTable.Load(24, "b2MakeRoundedBox");
			funcTable.Load(25, "b2MakeOffsetBox");
			funcTable.Load(26, "b2TransformPolygon");
			funcTable.Load(27, "b2ComputeCircleMass");
			funcTable.Load(28, "b2ComputeCapsuleMass");
			funcTable.Load(29, "b2ComputePolygonMass");
			funcTable.Load(30, "b2ComputeCircleAABB");
			funcTable.Load(31, "b2ComputeCapsuleAABB");
			funcTable.Load(32, "b2ComputePolygonAABB");
			funcTable.Load(33, "b2ComputeSegmentAABB");
			funcTable.Load(34, "b2PointInCircle");
			funcTable.Load(35, "b2PointInCapsule");
			funcTable.Load(36, "b2PointInPolygon");
			funcTable.Load(37, "b2RayCastCircle");
			funcTable.Load(38, "b2RayCastCapsule");
			funcTable.Load(39, "b2RayCastSegment");
			funcTable.Load(40, "b2RayCastPolygon");
			funcTable.Load(41, "b2ShapeCastCircle");
			funcTable.Load(42, "b2ShapeCastCapsule");
			funcTable.Load(43, "b2ShapeCastSegment");
			funcTable.Load(44, "b2ShapeCastPolygon");
			funcTable.Load(45, "b2ComputeHull");
			funcTable.Load(46, "b2ValidateHull");
			funcTable.Load(47, "b2SegmentDistance");
			funcTable.Load(48, "b2ShapeDistance");
			funcTable.Load(49, "b2ShapeCast");
			funcTable.Load(50, "b2MakeProxy");
			funcTable.Load(51, "b2GetSweepTransform");
			funcTable.Load(52, "b2TimeOfImpact");
			funcTable.Load(53, "b2CollideCircles");
			funcTable.Load(54, "b2CollideCapsuleAndCircle");
			funcTable.Load(55, "b2CollideSegmentAndCircle");
			funcTable.Load(56, "b2CollidePolygonAndCircle");
			funcTable.Load(57, "b2CollideCapsules");
			funcTable.Load(58, "b2CollideSegmentAndCapsule");
			funcTable.Load(59, "b2CollidePolygonAndCapsule");
			funcTable.Load(60, "b2CollidePolygons");
			funcTable.Load(61, "b2CollideSegmentAndPolygon");
			funcTable.Load(62, "b2CollideSmoothSegmentAndCircle");
			funcTable.Load(63, "b2CollideSmoothSegmentAndCapsule");
			funcTable.Load(64, "b2CollideSmoothSegmentAndPolygon");
			funcTable.Load(65, "b2DynamicTree_Create");
			funcTable.Load(66, "b2DynamicTree_Destroy");
			funcTable.Load(67, "b2DynamicTree_CreateProxy");
			funcTable.Load(68, "b2DynamicTree_DestroyProxy");
			funcTable.Load(69, "b2DynamicTree_MoveProxy");
			funcTable.Load(70, "b2DynamicTree_EnlargeProxy");
			funcTable.Load(71, "b2DynamicTree_Query");
			funcTable.Load(72, "b2DynamicTree_RayCast");
			funcTable.Load(73, "b2DynamicTree_ShapeCast");
			funcTable.Load(74, "b2DynamicTree_Validate");
			funcTable.Load(75, "b2DynamicTree_GetHeight");
			funcTable.Load(76, "b2DynamicTree_GetMaxBalance");
			funcTable.Load(77, "b2DynamicTree_GetAreaRatio");
			funcTable.Load(78, "b2DynamicTree_RebuildBottomUp");
			funcTable.Load(79, "b2DynamicTree_GetProxyCount");
			funcTable.Load(80, "b2DynamicTree_Rebuild");
			funcTable.Load(81, "b2DynamicTree_ShiftOrigin");
			funcTable.Load(82, "b2DynamicTree_GetByteCount");
			funcTable.Load(83, "b2DefaultWorldDef");
			funcTable.Load(84, "b2DefaultBodyDef");
			funcTable.Load(85, "b2DefaultFilter");
			funcTable.Load(86, "b2DefaultQueryFilter");
			funcTable.Load(87, "b2DefaultShapeDef");
			funcTable.Load(88, "b2DefaultChainDef");
			funcTable.Load(89, "b2DefaultDistanceJointDef");
			funcTable.Load(90, "b2DefaultMotorJointDef");
			funcTable.Load(91, "b2DefaultMouseJointDef");
			funcTable.Load(92, "b2DefaultPrismaticJointDef");
			funcTable.Load(93, "b2DefaultRevoluteJointDef");
			funcTable.Load(94, "b2DefaultWeldJointDef");
			funcTable.Load(95, "b2DefaultWheelJointDef");
			funcTable.Load(96, "b2CreateWorld");
			funcTable.Load(97, "b2DestroyWorld");
			funcTable.Load(98, "b2World_IsValid");
			funcTable.Load(99, "b2World_Step");
			funcTable.Load(100, "b2World_Draw");
			funcTable.Load(101, "b2World_GetBodyEvents");
			funcTable.Load(102, "b2World_GetSensorEvents");
			funcTable.Load(103, "b2World_GetContactEvents");
			funcTable.Load(104, "b2World_OverlapAABB");
			funcTable.Load(105, "b2World_OverlapCircle");
			funcTable.Load(106, "b2World_OverlapCapsule");
			funcTable.Load(107, "b2World_OverlapPolygon");
			funcTable.Load(108, "b2World_CastRay");
			funcTable.Load(109, "b2World_CastRayClosest");
			funcTable.Load(110, "b2World_CastCircle");
			funcTable.Load(111, "b2World_CastCapsule");
			funcTable.Load(112, "b2World_CastPolygon");
			funcTable.Load(113, "b2World_EnableSleeping");
			funcTable.Load(114, "b2World_EnableContinuous");
			funcTable.Load(115, "b2World_SetRestitutionThreshold");
			funcTable.Load(116, "b2World_SetHitEventThreshold");
			funcTable.Load(117, "b2World_SetCustomFilterCallback");
			funcTable.Load(118, "b2World_SetPreSolveCallback");
			funcTable.Load(119, "b2World_SetGravity");
			funcTable.Load(120, "b2World_GetGravity");
			funcTable.Load(121, "b2World_Explode");
			funcTable.Load(122, "b2World_SetContactTuning");
			funcTable.Load(123, "b2World_EnableWarmStarting");
			funcTable.Load(124, "b2World_GetProfile");
			funcTable.Load(125, "b2World_GetCounters");
			funcTable.Load(126, "b2World_DumpMemoryStats");
			funcTable.Load(127, "b2CreateBody");
			funcTable.Load(128, "b2DestroyBody");
			funcTable.Load(129, "b2Body_IsValid");
			funcTable.Load(130, "b2Body_GetType");
			funcTable.Load(131, "b2Body_SetType");
			funcTable.Load(132, "b2Body_SetUserData");
			funcTable.Load(133, "b2Body_GetUserData");
			funcTable.Load(134, "b2Body_GetPosition");
			funcTable.Load(135, "b2Body_GetRotation");
			funcTable.Load(136, "b2Body_GetTransform");
			funcTable.Load(137, "b2Body_SetTransform");
			funcTable.Load(138, "b2Body_GetLocalPoint");
			funcTable.Load(139, "b2Body_GetWorldPoint");
			funcTable.Load(140, "b2Body_GetLocalVector");
			funcTable.Load(141, "b2Body_GetWorldVector");
			funcTable.Load(142, "b2Body_GetLinearVelocity");
			funcTable.Load(143, "b2Body_GetAngularVelocity");
			funcTable.Load(144, "b2Body_SetLinearVelocity");
			funcTable.Load(145, "b2Body_SetAngularVelocity");
			funcTable.Load(146, "b2Body_ApplyForce");
			funcTable.Load(147, "b2Body_ApplyForceToCenter");
			funcTable.Load(148, "b2Body_ApplyTorque");
			funcTable.Load(149, "b2Body_ApplyLinearImpulse");
			funcTable.Load(150, "b2Body_ApplyLinearImpulseToCenter");
			funcTable.Load(151, "b2Body_ApplyAngularImpulse");
			funcTable.Load(152, "b2Body_GetMass");
			funcTable.Load(153, "b2Body_GetInertiaTensor");
			funcTable.Load(154, "b2Body_GetLocalCenterOfMass");
			funcTable.Load(155, "b2Body_GetWorldCenterOfMass");
			funcTable.Load(156, "b2Body_SetMassData");
			funcTable.Load(157, "b2Body_GetMassData");
			funcTable.Load(158, "b2Body_ApplyMassFromShapes");
			funcTable.Load(159, "b2Body_SetAutomaticMass");
			funcTable.Load(160, "b2Body_GetAutomaticMass");
			funcTable.Load(161, "b2Body_SetLinearDamping");
			funcTable.Load(162, "b2Body_GetLinearDamping");
			funcTable.Load(163, "b2Body_SetAngularDamping");
			funcTable.Load(164, "b2Body_GetAngularDamping");
			funcTable.Load(165, "b2Body_SetGravityScale");
			funcTable.Load(166, "b2Body_GetGravityScale");
			funcTable.Load(167, "b2Body_IsAwake");
			funcTable.Load(168, "b2Body_SetAwake");
			funcTable.Load(169, "b2Body_EnableSleep");
			funcTable.Load(170, "b2Body_IsSleepEnabled");
			funcTable.Load(171, "b2Body_SetSleepThreshold");
			funcTable.Load(172, "b2Body_GetSleepThreshold");
			funcTable.Load(173, "b2Body_IsEnabled");
			funcTable.Load(174, "b2Body_Disable");
			funcTable.Load(175, "b2Body_Enable");
			funcTable.Load(176, "b2Body_SetFixedRotation");
			funcTable.Load(177, "b2Body_IsFixedRotation");
			funcTable.Load(178, "b2Body_SetBullet");
			funcTable.Load(179, "b2Body_IsBullet");
			funcTable.Load(180, "b2Body_EnableHitEvents");
			funcTable.Load(181, "b2Body_GetShapeCount");
			funcTable.Load(182, "b2Body_GetShapes");
			funcTable.Load(183, "b2Body_GetJointCount");
			funcTable.Load(184, "b2Body_GetJoints");
			funcTable.Load(185, "b2Body_GetContactCapacity");
			funcTable.Load(186, "b2Body_GetContactData");
			funcTable.Load(187, "b2Body_ComputeAABB");
			funcTable.Load(188, "b2CreateCircleShape");
			funcTable.Load(189, "b2CreateSegmentShape");
			funcTable.Load(190, "b2CreateCapsuleShape");
			funcTable.Load(191, "b2CreatePolygonShape");
			funcTable.Load(192, "b2DestroyShape");
			funcTable.Load(193, "b2Shape_IsValid");
			funcTable.Load(194, "b2Shape_GetType");
			funcTable.Load(195, "b2Shape_GetBody");
			funcTable.Load(196, "b2Shape_IsSensor");
			funcTable.Load(197, "b2Shape_SetUserData");
			funcTable.Load(198, "b2Shape_GetUserData");
			funcTable.Load(199, "b2Shape_SetDensity");
			funcTable.Load(200, "b2Shape_GetDensity");
			funcTable.Load(201, "b2Shape_SetFriction");
			funcTable.Load(202, "b2Shape_GetFriction");
			funcTable.Load(203, "b2Shape_SetRestitution");
			funcTable.Load(204, "b2Shape_GetRestitution");
			funcTable.Load(205, "b2Shape_GetFilter");
			funcTable.Load(206, "b2Shape_SetFilter");
			funcTable.Load(207, "b2Shape_EnableSensorEvents");
			funcTable.Load(208, "b2Shape_AreSensorEventsEnabled");
			funcTable.Load(209, "b2Shape_EnableContactEvents");
			funcTable.Load(210, "b2Shape_AreContactEventsEnabled");
			funcTable.Load(211, "b2Shape_EnablePreSolveEvents");
			funcTable.Load(212, "b2Shape_ArePreSolveEventsEnabled");
			funcTable.Load(213, "b2Shape_EnableHitEvents");
			funcTable.Load(214, "b2Shape_AreHitEventsEnabled");
			funcTable.Load(215, "b2Shape_TestPoint");
			funcTable.Load(216, "b2Shape_RayCast");
			funcTable.Load(217, "b2Shape_GetCircle");
			funcTable.Load(218, "b2Shape_GetSegment");
			funcTable.Load(219, "b2Shape_GetSmoothSegment");
			funcTable.Load(220, "b2Shape_GetCapsule");
			funcTable.Load(221, "b2Shape_GetPolygon");
			funcTable.Load(222, "b2Shape_SetCircle");
			funcTable.Load(223, "b2Shape_SetCapsule");
			funcTable.Load(224, "b2Shape_SetSegment");
			funcTable.Load(225, "b2Shape_SetPolygon");
			funcTable.Load(226, "b2Shape_GetParentChain");
			funcTable.Load(227, "b2Shape_GetContactCapacity");
			funcTable.Load(228, "b2Shape_GetContactData");
			funcTable.Load(229, "b2Shape_GetAABB");
			funcTable.Load(230, "b2Shape_GetClosestPoint");
			funcTable.Load(231, "b2CreateChain");
			funcTable.Load(232, "b2DestroyChain");
			funcTable.Load(233, "b2Chain_SetFriction");
			funcTable.Load(234, "b2Chain_SetRestitution");
			funcTable.Load(235, "b2Chain_IsValid");
			funcTable.Load(236, "b2DestroyJoint");
			funcTable.Load(237, "b2Joint_IsValid");
			funcTable.Load(238, "b2Joint_GetType");
			funcTable.Load(239, "b2Joint_GetBodyA");
			funcTable.Load(240, "b2Joint_GetBodyB");
			funcTable.Load(241, "b2Joint_GetLocalAnchorA");
			funcTable.Load(242, "b2Joint_GetLocalAnchorB");
			funcTable.Load(243, "b2Joint_SetCollideConnected");
			funcTable.Load(244, "b2Joint_GetCollideConnected");
			funcTable.Load(245, "b2Joint_SetUserData");
			funcTable.Load(246, "b2Joint_GetUserData");
			funcTable.Load(247, "b2Joint_WakeBodies");
			funcTable.Load(248, "b2Joint_GetConstraintForce");
			funcTable.Load(249, "b2Joint_GetConstraintTorque");
			funcTable.Load(250, "b2CreateDistanceJoint");
			funcTable.Load(251, "b2DistanceJoint_SetLength");
			funcTable.Load(252, "b2DistanceJoint_GetLength");
			funcTable.Load(253, "b2DistanceJoint_EnableSpring");
			funcTable.Load(254, "b2DistanceJoint_IsSpringEnabled");
			funcTable.Load(255, "b2DistanceJoint_SetSpringHertz");
			funcTable.Load(256, "b2DistanceJoint_SetSpringDampingRatio");
			funcTable.Load(257, "b2DistanceJoint_GetHertz");
			funcTable.Load(258, "b2DistanceJoint_GetDampingRatio");
			funcTable.Load(259, "b2DistanceJoint_EnableLimit");
			funcTable.Load(260, "b2DistanceJoint_IsLimitEnabled");
			funcTable.Load(261, "b2DistanceJoint_SetLengthRange");
			funcTable.Load(262, "b2DistanceJoint_GetMinLength");
			funcTable.Load(263, "b2DistanceJoint_GetMaxLength");
			funcTable.Load(264, "b2DistanceJoint_GetCurrentLength");
			funcTable.Load(265, "b2DistanceJoint_EnableMotor");
			funcTable.Load(266, "b2DistanceJoint_IsMotorEnabled");
			funcTable.Load(267, "b2DistanceJoint_SetMotorSpeed");
			funcTable.Load(268, "b2DistanceJoint_GetMotorSpeed");
			funcTable.Load(269, "b2DistanceJoint_SetMaxMotorForce");
			funcTable.Load(270, "b2DistanceJoint_GetMaxMotorForce");
			funcTable.Load(271, "b2DistanceJoint_GetMotorForce");
			funcTable.Load(272, "b2CreateMotorJoint");
			funcTable.Load(273, "b2MotorJoint_SetLinearOffset");
			funcTable.Load(274, "b2MotorJoint_GetLinearOffset");
			funcTable.Load(275, "b2MotorJoint_SetAngularOffset");
			funcTable.Load(276, "b2MotorJoint_GetAngularOffset");
			funcTable.Load(277, "b2MotorJoint_SetMaxForce");
			funcTable.Load(278, "b2MotorJoint_GetMaxForce");
			funcTable.Load(279, "b2MotorJoint_SetMaxTorque");
			funcTable.Load(280, "b2MotorJoint_GetMaxTorque");
			funcTable.Load(281, "b2MotorJoint_SetCorrectionFactor");
			funcTable.Load(282, "b2MotorJoint_GetCorrectionFactor");
			funcTable.Load(283, "b2CreateMouseJoint");
			funcTable.Load(284, "b2MouseJoint_SetTarget");
			funcTable.Load(285, "b2MouseJoint_GetTarget");
			funcTable.Load(286, "b2MouseJoint_SetSpringHertz");
			funcTable.Load(287, "b2MouseJoint_GetSpringHertz");
			funcTable.Load(288, "b2MouseJoint_SetSpringDampingRatio");
			funcTable.Load(289, "b2MouseJoint_GetSpringDampingRatio");
			funcTable.Load(290, "b2MouseJoint_SetMaxForce");
			funcTable.Load(291, "b2MouseJoint_GetMaxForce");
			funcTable.Load(292, "b2CreatePrismaticJoint");
			funcTable.Load(293, "b2PrismaticJoint_EnableSpring");
			funcTable.Load(294, "b2PrismaticJoint_IsSpringEnabled");
			funcTable.Load(295, "b2PrismaticJoint_SetSpringHertz");
			funcTable.Load(296, "b2PrismaticJoint_GetSpringHertz");
			funcTable.Load(297, "b2PrismaticJoint_SetSpringDampingRatio");
			funcTable.Load(298, "b2PrismaticJoint_GetSpringDampingRatio");
			funcTable.Load(299, "b2PrismaticJoint_EnableLimit");
			funcTable.Load(300, "b2PrismaticJoint_IsLimitEnabled");
			funcTable.Load(301, "b2PrismaticJoint_GetLowerLimit");
			funcTable.Load(302, "b2PrismaticJoint_GetUpperLimit");
			funcTable.Load(303, "b2PrismaticJoint_SetLimits");
			funcTable.Load(304, "b2PrismaticJoint_EnableMotor");
			funcTable.Load(305, "b2PrismaticJoint_IsMotorEnabled");
			funcTable.Load(306, "b2PrismaticJoint_SetMotorSpeed");
			funcTable.Load(307, "b2PrismaticJoint_GetMotorSpeed");
			funcTable.Load(308, "b2PrismaticJoint_SetMaxMotorForce");
			funcTable.Load(309, "b2PrismaticJoint_GetMaxMotorForce");
			funcTable.Load(310, "b2PrismaticJoint_GetMotorForce");
			funcTable.Load(311, "b2CreateRevoluteJoint");
			funcTable.Load(312, "b2RevoluteJoint_EnableSpring");
			funcTable.Load(313, "b2RevoluteJoint_SetSpringHertz");
			funcTable.Load(314, "b2RevoluteJoint_GetSpringHertz");
			funcTable.Load(315, "b2RevoluteJoint_SetSpringDampingRatio");
			funcTable.Load(316, "b2RevoluteJoint_GetSpringDampingRatio");
			funcTable.Load(317, "b2RevoluteJoint_GetAngle");
			funcTable.Load(318, "b2RevoluteJoint_EnableLimit");
			funcTable.Load(319, "b2RevoluteJoint_IsLimitEnabled");
			funcTable.Load(320, "b2RevoluteJoint_GetLowerLimit");
			funcTable.Load(321, "b2RevoluteJoint_GetUpperLimit");
			funcTable.Load(322, "b2RevoluteJoint_SetLimits");
			funcTable.Load(323, "b2RevoluteJoint_EnableMotor");
			funcTable.Load(324, "b2RevoluteJoint_IsMotorEnabled");
			funcTable.Load(325, "b2RevoluteJoint_SetMotorSpeed");
			funcTable.Load(326, "b2RevoluteJoint_GetMotorSpeed");
			funcTable.Load(327, "b2RevoluteJoint_GetMotorTorque");
			funcTable.Load(328, "b2RevoluteJoint_SetMaxMotorTorque");
			funcTable.Load(329, "b2RevoluteJoint_GetMaxMotorTorque");
			funcTable.Load(330, "b2CreateWeldJoint");
			funcTable.Load(331, "b2WeldJoint_SetLinearHertz");
			funcTable.Load(332, "b2WeldJoint_GetLinearHertz");
			funcTable.Load(333, "b2WeldJoint_SetLinearDampingRatio");
			funcTable.Load(334, "b2WeldJoint_GetLinearDampingRatio");
			funcTable.Load(335, "b2WeldJoint_SetAngularHertz");
			funcTable.Load(336, "b2WeldJoint_GetAngularHertz");
			funcTable.Load(337, "b2WeldJoint_SetAngularDampingRatio");
			funcTable.Load(338, "b2WeldJoint_GetAngularDampingRatio");
			funcTable.Load(339, "b2CreateWheelJoint");
			funcTable.Load(340, "b2WheelJoint_EnableSpring");
			funcTable.Load(341, "b2WheelJoint_IsSpringEnabled");
			funcTable.Load(342, "b2WheelJoint_SetSpringHertz");
			funcTable.Load(343, "b2WheelJoint_GetSpringHertz");
			funcTable.Load(344, "b2WheelJoint_SetSpringDampingRatio");
			funcTable.Load(345, "b2WheelJoint_GetSpringDampingRatio");
			funcTable.Load(346, "b2WheelJoint_EnableLimit");
			funcTable.Load(347, "b2WheelJoint_IsLimitEnabled");
			funcTable.Load(348, "b2WheelJoint_GetLowerLimit");
			funcTable.Load(349, "b2WheelJoint_GetUpperLimit");
			funcTable.Load(350, "b2WheelJoint_SetLimits");
			funcTable.Load(351, "b2WheelJoint_EnableMotor");
			funcTable.Load(352, "b2WheelJoint_IsMotorEnabled");
			funcTable.Load(353, "b2WheelJoint_SetMotorSpeed");
			funcTable.Load(354, "b2WheelJoint_GetMotorSpeed");
			funcTable.Load(355, "b2WheelJoint_SetMaxMotorTorque");
			funcTable.Load(356, "b2WheelJoint_GetMaxMotorTorque");
			funcTable.Load(357, "b2WheelJoint_GetMotorTorque");
		}

		public static void FreeApi()
		{
			funcTable.Free();
		}
	}
}
