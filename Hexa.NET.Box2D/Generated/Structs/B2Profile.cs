// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Box2D
{
	/// <summary>
	/// <br/>
	/// Profiling data. Times are in milliseconds.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "b2Profile")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct B2Profile
	{
		[NativeName(NativeNameType.Field, "step")]
		[NativeName(NativeNameType.Type, "float")]
		public float Step;
		[NativeName(NativeNameType.Field, "pairs")]
		[NativeName(NativeNameType.Type, "float")]
		public float Pairs;
		[NativeName(NativeNameType.Field, "collide")]
		[NativeName(NativeNameType.Type, "float")]
		public float Collide;
		[NativeName(NativeNameType.Field, "solve")]
		[NativeName(NativeNameType.Type, "float")]
		public float Solve;
		[NativeName(NativeNameType.Field, "buildIslands")]
		[NativeName(NativeNameType.Type, "float")]
		public float BuildIslands;
		[NativeName(NativeNameType.Field, "solveConstraints")]
		[NativeName(NativeNameType.Type, "float")]
		public float SolveConstraints;
		[NativeName(NativeNameType.Field, "prepareTasks")]
		[NativeName(NativeNameType.Type, "float")]
		public float PrepareTasks;
		[NativeName(NativeNameType.Field, "solverTasks")]
		[NativeName(NativeNameType.Type, "float")]
		public float SolverTasks;
		[NativeName(NativeNameType.Field, "prepareConstraints")]
		[NativeName(NativeNameType.Type, "float")]
		public float PrepareConstraints;
		[NativeName(NativeNameType.Field, "integrateVelocities")]
		[NativeName(NativeNameType.Type, "float")]
		public float IntegrateVelocities;
		[NativeName(NativeNameType.Field, "warmStart")]
		[NativeName(NativeNameType.Type, "float")]
		public float WarmStart;
		[NativeName(NativeNameType.Field, "solveVelocities")]
		[NativeName(NativeNameType.Type, "float")]
		public float SolveVelocities;
		[NativeName(NativeNameType.Field, "integratePositions")]
		[NativeName(NativeNameType.Type, "float")]
		public float IntegratePositions;
		[NativeName(NativeNameType.Field, "relaxVelocities")]
		[NativeName(NativeNameType.Type, "float")]
		public float RelaxVelocities;
		[NativeName(NativeNameType.Field, "applyRestitution")]
		[NativeName(NativeNameType.Type, "float")]
		public float ApplyRestitution;
		[NativeName(NativeNameType.Field, "storeImpulses")]
		[NativeName(NativeNameType.Type, "float")]
		public float StoreImpulses;
		[NativeName(NativeNameType.Field, "finalizeBodies")]
		[NativeName(NativeNameType.Type, "float")]
		public float FinalizeBodies;
		[NativeName(NativeNameType.Field, "splitIslands")]
		[NativeName(NativeNameType.Type, "float")]
		public float SplitIslands;
		[NativeName(NativeNameType.Field, "sleepIslands")]
		[NativeName(NativeNameType.Type, "float")]
		public float SleepIslands;
		[NativeName(NativeNameType.Field, "hitEvents")]
		[NativeName(NativeNameType.Type, "float")]
		public float HitEvents;
		[NativeName(NativeNameType.Field, "broadphase")]
		[NativeName(NativeNameType.Type, "float")]
		public float Broadphase;
		[NativeName(NativeNameType.Field, "continuous")]
		[NativeName(NativeNameType.Type, "float")]
		public float Continuous;

		public unsafe B2Profile(float step = default, float pairs = default, float collide = default, float solve = default, float buildIslands = default, float solveConstraints = default, float prepareTasks = default, float solverTasks = default, float prepareConstraints = default, float integrateVelocities = default, float warmStart = default, float solveVelocities = default, float integratePositions = default, float relaxVelocities = default, float applyRestitution = default, float storeImpulses = default, float finalizeBodies = default, float splitIslands = default, float sleepIslands = default, float hitEvents = default, float broadphase = default, float continuous = default)
		{
			Step = step;
			Pairs = pairs;
			Collide = collide;
			Solve = solve;
			BuildIslands = buildIslands;
			SolveConstraints = solveConstraints;
			PrepareTasks = prepareTasks;
			SolverTasks = solverTasks;
			PrepareConstraints = prepareConstraints;
			IntegrateVelocities = integrateVelocities;
			WarmStart = warmStart;
			SolveVelocities = solveVelocities;
			IntegratePositions = integratePositions;
			RelaxVelocities = relaxVelocities;
			ApplyRestitution = applyRestitution;
			StoreImpulses = storeImpulses;
			FinalizeBodies = finalizeBodies;
			SplitIslands = splitIslands;
			SleepIslands = sleepIslands;
			HitEvents = hitEvents;
			Broadphase = broadphase;
			Continuous = continuous;
		}


	}

}
