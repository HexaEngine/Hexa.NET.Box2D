// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Box2D
{
	/// <summary>
	/// Input for b2ShapeDistance<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "b2DistanceInput")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct B2DistanceInput
	{
		/// <summary>
		/// The proxy for shape A<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "proxyA")]
		[NativeName(NativeNameType.Type, "b2DistanceProxy")]
		public B2DistanceProxy ProxyA;

		/// <summary>
		/// The proxy for shape B<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "proxyB")]
		[NativeName(NativeNameType.Type, "b2DistanceProxy")]
		public B2DistanceProxy ProxyB;

		/// <summary>
		/// The world transform for shape A<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "transformA")]
		[NativeName(NativeNameType.Type, "b2Transform")]
		public B2Transform TransformA;

		/// <summary>
		/// The world transform for shape B<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "transformB")]
		[NativeName(NativeNameType.Type, "b2Transform")]
		public B2Transform TransformB;

		/// <summary>
		/// Should the proxy radius be considered?<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "useRadii")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte UseRadii;


		public unsafe B2DistanceInput(B2DistanceProxy proxyA = default, B2DistanceProxy proxyB = default, B2Transform transformA = default, B2Transform transformB = default, bool useRadii = default)
		{
			ProxyA = proxyA;
			ProxyB = proxyB;
			TransformA = transformA;
			TransformB = transformB;
			UseRadii = useRadii ? (byte)1 : (byte)0;
		}


	}

}
