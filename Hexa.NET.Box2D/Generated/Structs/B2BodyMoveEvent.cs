// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Box2D
{
	/// <summary>
	/// Body move events triggered when a body moves.<br/>
	/// Triggered when a body moves due to simulation. Not reported for bodies moved by the user.<br/>
	/// This also has a flag to indicate that the body went to sleep so the application can also<br/>
	/// sleep that actor/entity/object associated with the body.<br/>
	/// On the other hand if the flag does not indicate the body went to sleep then the application<br/>
	/// can treat the actor/entity/object associated with the body as awake.<br/>
	/// This is an efficient way for an application to update game object transforms rather than<br/>
	/// calling functions such as b2Body_GetTransform() because this data is delivered as a contiguous array<br/>
	/// and it is only populated with bodies that have moved.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "b2BodyMoveEvent")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct B2BodyMoveEvent
	{
		[NativeName(NativeNameType.Field, "transform")]
		[NativeName(NativeNameType.Type, "b2Transform")]
		public B2Transform Transform;
		[NativeName(NativeNameType.Field, "bodyId")]
		[NativeName(NativeNameType.Type, "b2BodyId")]
		public B2BodyId BodyId;
		[NativeName(NativeNameType.Field, "userData")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* UserData;
		[NativeName(NativeNameType.Field, "fellAsleep")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte FellAsleep;

		public unsafe B2BodyMoveEvent(B2Transform transform = default, B2BodyId bodyId = default, void* userData = default, bool fellAsleep = default)
		{
			Transform = transform;
			BodyId = bodyId;
			UserData = userData;
			FellAsleep = fellAsleep ? (byte)1 : (byte)0;
		}


	}

}
