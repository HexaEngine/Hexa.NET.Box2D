// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Box2D
{
	/// <summary>
	/// A hit touch event is generated when two shapes collide with a speed faster than the hit speed threshold.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "b2ContactHitEvent")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct B2ContactHitEvent
	{
		/// <summary>
		/// Id of the first shape<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "shapeIdA")]
		[NativeName(NativeNameType.Type, "b2ShapeId")]
		public B2ShapeId ShapeIdA;

		/// <summary>
		/// Id of the second shape<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "shapeIdB")]
		[NativeName(NativeNameType.Type, "b2ShapeId")]
		public B2ShapeId ShapeIdB;

		/// <summary>
		/// Point where the shapes hit<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "point")]
		[NativeName(NativeNameType.Type, "b2Vec2")]
		public Vector2 Point;

		/// <summary>
		/// Normal vector pointing from shape A to shape B<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "normal")]
		[NativeName(NativeNameType.Type, "b2Vec2")]
		public Vector2 Normal;

		/// <summary>
		/// The speed the shapes are approaching. Always positive. Typically in meters per second.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "approachSpeed")]
		[NativeName(NativeNameType.Type, "float")]
		public float ApproachSpeed;


		public unsafe B2ContactHitEvent(B2ShapeId shapeIdA = default, B2ShapeId shapeIdB = default, Vector2 point = default, Vector2 normal = default, float approachSpeed = default)
		{
			ShapeIdA = shapeIdA;
			ShapeIdB = shapeIdB;
			Point = point;
			Normal = normal;
			ApproachSpeed = approachSpeed;
		}


	}

}
