// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Box2D
{
	/// <summary>
	/// A smooth line segment with one-sided collision. Only collides on the right side.<br/>
	/// Several of these are generated for a chain shape.<br/>
	/// ghost1 -> point1 -> point2 -> ghost2<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "b2SmoothSegment")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct B2SmoothSegment
	{
		/// <summary>
		/// The tail ghost vertex<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ghost1")]
		[NativeName(NativeNameType.Type, "b2Vec2")]
		public Vector2 Ghost1;

		/// <summary>
		/// The line segment<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "segment")]
		[NativeName(NativeNameType.Type, "b2Segment")]
		public B2Segment Segment;

		/// <summary>
		/// The head ghost vertex<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ghost2")]
		[NativeName(NativeNameType.Type, "b2Vec2")]
		public Vector2 Ghost2;

		/// <summary>
		/// The owning chain shape index (internal usage only)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "chainId")]
		[NativeName(NativeNameType.Type, "int32_t")]
		public int ChainId;


		public unsafe B2SmoothSegment(Vector2 ghost1 = default, B2Segment segment = default, Vector2 ghost2 = default, int chainId = default)
		{
			Ghost1 = ghost1;
			Segment = segment;
			Ghost2 = ghost2;
			ChainId = chainId;
		}


	}

}
