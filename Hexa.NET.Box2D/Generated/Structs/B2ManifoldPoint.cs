// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Box2D
{
	/// <summary>
	/// A manifold point is a contact point belonging to a contact<br/>
	/// manifold. It holds details related to the geometry and dynamics<br/>
	/// of the contact points.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "b2ManifoldPoint")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct B2ManifoldPoint
	{
		/// <summary>
		/// Location of the contact point in world space. Subject to precision loss at large coordinates.<br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "point")]
		[NativeName(NativeNameType.Type, "b2Vec2")]
		public Vector2 Point;

		/// <summary>
		/// Location of the contact point relative to bodyA's origin in world space<br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "anchorA")]
		[NativeName(NativeNameType.Type, "b2Vec2")]
		public Vector2 AnchorA;

		/// <summary>
		/// Location of the contact point relative to bodyB's origin in world space<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "anchorB")]
		[NativeName(NativeNameType.Type, "b2Vec2")]
		public Vector2 AnchorB;

		/// <summary>
		/// The separation of the contact point, negative if penetrating<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "separation")]
		[NativeName(NativeNameType.Type, "float")]
		public float Separation;

		/// <summary>
		/// The impulse along the manifold normal vector.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "normalImpulse")]
		[NativeName(NativeNameType.Type, "float")]
		public float NormalImpulse;

		/// <summary>
		/// The friction impulse<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "tangentImpulse")]
		[NativeName(NativeNameType.Type, "float")]
		public float TangentImpulse;

		/// <summary>
		/// The maximum normal impulse applied during sub-stepping<br/>
		/// todo not sure this is needed<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "maxNormalImpulse")]
		[NativeName(NativeNameType.Type, "float")]
		public float MaxNormalImpulse;

		/// <summary>
		/// Relative normal velocity pre-solve. Used for hit events. If the normal impulse is<br/>
		/// zero then there was no hit. Negative means shapes are approaching.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "normalVelocity")]
		[NativeName(NativeNameType.Type, "float")]
		public float NormalVelocity;

		/// <summary>
		/// Uniquely identifies a contact point between two shapes<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "id")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort Id;

		/// <summary>
		/// Did this contact point exist the previous step?<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "persisted")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte Persisted;


		public unsafe B2ManifoldPoint(Vector2 point = default, Vector2 anchorA = default, Vector2 anchorB = default, float separation = default, float normalImpulse = default, float tangentImpulse = default, float maxNormalImpulse = default, float normalVelocity = default, ushort id = default, bool persisted = default)
		{
			Point = point;
			AnchorA = anchorA;
			AnchorB = anchorB;
			Separation = separation;
			NormalImpulse = normalImpulse;
			TangentImpulse = tangentImpulse;
			MaxNormalImpulse = maxNormalImpulse;
			NormalVelocity = normalVelocity;
			Id = id;
			Persisted = persisted ? (byte)1 : (byte)0;
		}


	}

}
