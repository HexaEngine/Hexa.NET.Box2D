// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Box2D
{
	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a closed polygon provided in CCW order.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawPolygon")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawPolygon([NativeName(NativeNameType.Param, "vertices")] [NativeName(NativeNameType.Type, "b2Vec2 const *")] Vector2* vertices, [NativeName(NativeNameType.Param, "vertexCount")] [NativeName(NativeNameType.Type, "int")] int vertexCount, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a closed polygon provided in CCW order.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawPolygon")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawPolygon([NativeName(NativeNameType.Param, "vertices")] [NativeName(NativeNameType.Type, "b2Vec2 const *")] nint vertices, [NativeName(NativeNameType.Param, "vertexCount")] [NativeName(NativeNameType.Type, "int")] int vertexCount, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a solid closed polygon provided in CCW order.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawSolidPolygon")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawSolidPolygon([NativeName(NativeNameType.Param, "transform")] [NativeName(NativeNameType.Type, "b2Transform")] B2Transform transform, [NativeName(NativeNameType.Param, "vertices")] [NativeName(NativeNameType.Type, "b2Vec2 const *")] Vector2* vertices, [NativeName(NativeNameType.Param, "vertexCount")] [NativeName(NativeNameType.Type, "int")] int vertexCount, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a solid closed polygon provided in CCW order.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawSolidPolygon")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawSolidPolygon([NativeName(NativeNameType.Param, "transform")] [NativeName(NativeNameType.Type, "b2Transform")] B2Transform transform, [NativeName(NativeNameType.Param, "vertices")] [NativeName(NativeNameType.Type, "b2Vec2 const *")] nint vertices, [NativeName(NativeNameType.Param, "vertexCount")] [NativeName(NativeNameType.Type, "int")] int vertexCount, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a circle.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawCircle")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawCircle([NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a circle.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawCircle")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawCircle([NativeName(NativeNameType.Param, "center")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 center, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a solid circle.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawSolidCircle")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawSolidCircle([NativeName(NativeNameType.Param, "transform")] [NativeName(NativeNameType.Type, "b2Transform")] B2Transform transform, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a solid circle.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawSolidCircle")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawSolidCircle([NativeName(NativeNameType.Param, "transform")] [NativeName(NativeNameType.Type, "b2Transform")] B2Transform transform, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a capsule.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawCapsule")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawCapsule([NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p2, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a capsule.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawCapsule")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawCapsule([NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p2, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a solid capsule.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawSolidCapsule")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawSolidCapsule([NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p2, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a solid capsule.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawSolidCapsule")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawSolidCapsule([NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p2, [NativeName(NativeNameType.Param, "radius")] [NativeName(NativeNameType.Type, "float")] float radius, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a line segment.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawSegment")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawSegment([NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p2, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a line segment.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawSegment")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawSegment([NativeName(NativeNameType.Param, "p1")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p1, [NativeName(NativeNameType.Param, "p2")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p2, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a transform. Choose your own length scale.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawTransform")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawTransform([NativeName(NativeNameType.Param, "transform")] [NativeName(NativeNameType.Type, "b2Transform")] B2Transform transform, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a transform. Choose your own length scale.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawTransform")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawTransform([NativeName(NativeNameType.Param, "transform")] [NativeName(NativeNameType.Type, "b2Transform")] B2Transform transform, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a point.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawPoint")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawPoint([NativeName(NativeNameType.Param, "p")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "float")] float size, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a point.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawPoint")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawPoint([NativeName(NativeNameType.Param, "p")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "float")] float size, [NativeName(NativeNameType.Param, "color")] [NativeName(NativeNameType.Type, "b2HexColor")] B2HexColor color, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// Draw a string.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawString")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawString([NativeName(NativeNameType.Param, "p")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "char const *")] byte* s, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] void* context);

	#else
	/// <summary>
	/// Draw a string.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "DrawString")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void DrawString([NativeName(NativeNameType.Param, "p")] [NativeName(NativeNameType.Type, "b2Vec2")] Vector2 p, [NativeName(NativeNameType.Param, "s")] [NativeName(NativeNameType.Type, "char const *")] nint s, [NativeName(NativeNameType.Param, "context")] [NativeName(NativeNameType.Type, "void *")] nint context);

	#endif

}
